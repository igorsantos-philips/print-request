plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.bmuschko.docker-spring-boot-application' version '9.2.1'
}

group = 'com.igortest'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenLocal()
	maven {
        name 'nexus'
        url "http://repo.portal.whebdc.com.br/content/groups/public/"
        allowInsecureProtocol = true
    }
    maven {
        name 'nexus-releases'
        url "http://repo.portal.whebdc.com.br/content/repositories/releases/"
        allowInsecureProtocol = true
    }
    maven {
        name 'nexus-snapshots'
        url "http://repo.portal.whebdc.com.br/content/repositories/snapshots/"
        allowInsecureProtocol = true
    }
    mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.json', name: 'json', version: '20090211'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*

task createDockerFile(type: Dockerfile) {
    from 'openjdk:17-oracle'
    copyFile jar.archiveFileName.get(), '/app/print-request.jar'
    entryPoint 'java'
    defaultCommand '-jar', '/app/print-request.jar'
    exposePort 7070
}
task syncJar(type: Copy) {
    dependsOn assemble
    from jar.destinationDirectory
    into "$buildDir/docker"
}
task buildImage(type: DockerBuildImage) {
    dependsOn createDockerFile, syncJar
    inputDir = createDockerFile.getDestDir()
    images = ["igorsantos-philips/tuneit-gradle-docker:1.0"]
}
